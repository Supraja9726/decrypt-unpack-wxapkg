var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(n) {
    return typeof n;
} : function(n) {
    return n && "function" == typeof Symbol && n.constructor === Symbol && n !== Symbol.prototype ? "symbol" : typeof n;
};

!function(n, t) {
    "object" == ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : n.fecha = t();
}(void 0, function() {
    function n(n, t) {
        for (var e = [], r = 0, o = n.length; r < o; r++) e.push(n[r].substr(0, t));
        return e;
    }
    function t(n) {
        return function(t, e, r) {
            var o = r[n].indexOf(e.charAt(0).toUpperCase() + e.substr(1).toLowerCase());
            ~o && (t.month = o);
        };
    }
    function e(n, t) {
        for (n = String(n), t = t || 2; n.length < t; ) n = "0" + n;
        return n;
    }
    var r = {}, o = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g, u = "[^\\s]+", i = /\[([^]*?)\]/gm, a = function() {}, d = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], s = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ], f = n(s, 3), m = n(d, 3);
    r.i18n = {
        dayNamesShort: m,
        dayNames: d,
        monthNamesShort: f,
        monthNames: s,
        amPm: [ "am", "pm" ],
        DoFn: function(n) {
            return n + [ "th", "st", "nd", "rd" ][n % 10 > 3 ? 0 : (n - n % 10 != 10) * n % 10];
        }
    };
    var c = {
        D: function(n) {
            return n.getDate();
        },
        DD: function(n) {
            return e(n.getDate());
        },
        Do: function(n, t) {
            return t.DoFn(n.getDate());
        },
        d: function(n) {
            return n.getDay();
        },
        dd: function(n) {
            return e(n.getDay());
        },
        ddd: function(n, t) {
            return t.dayNamesShort[n.getDay()];
        },
        dddd: function(n, t) {
            return t.dayNames[n.getDay()];
        },
        M: function(n) {
            return n.getMonth() + 1;
        },
        MM: function(n) {
            return e(n.getMonth() + 1);
        },
        MMM: function(n, t) {
            return t.monthNamesShort[n.getMonth()];
        },
        MMMM: function(n, t) {
            return t.monthNames[n.getMonth()];
        },
        YY: function(n) {
            return e(String(n.getFullYear()), 4).substr(2);
        },
        YYYY: function(n) {
            return e(n.getFullYear(), 4);
        },
        h: function(n) {
            return n.getHours() % 12 || 12;
        },
        hh: function(n) {
            return e(n.getHours() % 12 || 12);
        },
        H: function(n) {
            return n.getHours();
        },
        HH: function(n) {
            return e(n.getHours());
        },
        m: function(n) {
            return n.getMinutes();
        },
        mm: function(n) {
            return e(n.getMinutes());
        },
        s: function(n) {
            return n.getSeconds();
        },
        ss: function(n) {
            return e(n.getSeconds());
        },
        S: function(n) {
            return Math.round(n.getMilliseconds() / 100);
        },
        SS: function(n) {
            return e(Math.round(n.getMilliseconds() / 10), 2);
        },
        SSS: function(n) {
            return e(n.getMilliseconds(), 3);
        },
        a: function(n, t) {
            return n.getHours() < 12 ? t.amPm[0] : t.amPm[1];
        },
        A: function(n, t) {
            return n.getHours() < 12 ? t.amPm[0].toUpperCase() : t.amPm[1].toUpperCase();
        },
        ZZ: function(n) {
            var t = n.getTimezoneOffset();
            return (t > 0 ? "-" : "+") + e(100 * Math.floor(Math.abs(t) / 60) + Math.abs(t) % 60, 4);
        }
    }, l = {
        D: [ "\\d\\d?", function(n, t) {
            n.day = t;
        } ],
        Do: [ "\\d\\d?" + u, function(n, t) {
            n.day = parseInt(t, 10);
        } ],
        M: [ "\\d\\d?", function(n, t) {
            n.month = t - 1;
        } ],
        YY: [ "\\d\\d?", function(n, t) {
            var e = +("" + new Date().getFullYear()).substr(0, 2);
            n.year = "" + (t > 68 ? e - 1 : e) + t;
        } ],
        h: [ "\\d\\d?", function(n, t) {
            n.hour = t;
        } ],
        m: [ "\\d\\d?", function(n, t) {
            n.minute = t;
        } ],
        s: [ "\\d\\d?", function(n, t) {
            n.second = t;
        } ],
        YYYY: [ "\\d{4}", function(n, t) {
            n.year = t;
        } ],
        S: [ "\\d", function(n, t) {
            n.millisecond = 100 * t;
        } ],
        SS: [ "\\d{2}", function(n, t) {
            n.millisecond = 10 * t;
        } ],
        SSS: [ "\\d{3}", function(n, t) {
            n.millisecond = t;
        } ],
        d: [ "\\d\\d?", a ],
        ddd: [ u, a ],
        MMM: [ u, t("monthNamesShort") ],
        MMMM: [ u, t("monthNames") ],
        a: [ u, function(n, t, e) {
            var r = t.toLowerCase();
            r === e.amPm[0] ? n.isPm = !1 : r === e.amPm[1] && (n.isPm = !0);
        } ],
        ZZ: [ "[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z", function(n, t) {
            var e, r = (t + "").match(/([\+\-]|\d\d)/gi);
            r && (e = 60 * r[1] + parseInt(r[2], 10), n.timezoneOffset = "+" === r[0] ? e : -e);
        } ]
    };
    return l.dd = l.d, l.dddd = l.ddd, l.DD = l.D, l.mm = l.m, l.hh = l.H = l.HH = l.h, 
    l.MM = l.M, l.ss = l.s, l.A = l.a, r.masks = {
        default: "ddd MMM DD YYYY HH:mm:ss",
        shortDate: "M/D/YY",
        mediumDate: "MMM D, YYYY",
        longDate: "MMMM D, YYYY",
        fullDate: "dddd, MMMM D, YYYY",
        shortTime: "HH:mm",
        mediumTime: "HH:mm:ss",
        longTime: "HH:mm:ss.SSS"
    }, r.format = function(n, t, e) {
        var u = e || r.i18n;
        if ("number" == typeof n && (n = new Date(n)), "[object Date]" !== Object.prototype.toString.call(n) || isNaN(n.getTime())) throw new Error("Invalid Date in fecha.format");
        var a = [];
        return (t = (t = (t = r.masks[t] || t || r.masks.default).replace(i, function(n, t) {
            return a.push(t), "??";
        })).replace(o, function(t) {
            return t in c ? c[t](n, u) : t.slice(1, t.length - 1);
        })).replace(/\?\?/g, function() {
            return a.shift();
        });
    }, r.parse = function(n, t, e) {
        var u = e || r.i18n;
        if ("string" != typeof t) throw new Error("Invalid format in fecha.parse");
        if (t = r.masks[t] || t, n.length > 1e3) return null;
        var i, a = {}, d = [], s = (i = t, i.replace(/[|\\{()[^$+*?.-]/g, "\\$&")).replace(o, function(n) {
            if (l[n]) {
                var t = l[n];
                return d.push(t[1]), "(" + t[0] + ")";
            }
            return n;
        }), f = n.match(new RegExp(s, "i"));
        if (!f) return null;
        for (var m = 1; m < f.length; m++) d[m - 1](a, f[m], u);
        var c, h = new Date();
        return !0 === a.isPm && null != a.hour && 12 != +a.hour ? a.hour = +a.hour + 12 : !1 === a.isPm && 12 == +a.hour && (a.hour = 0), 
        null != a.timezoneOffset ? (a.minute = +(a.minute || 0) - +a.timezoneOffset, c = new Date(Date.UTC(a.year || h.getFullYear(), a.month || 0, a.day || 1, a.hour || 0, a.minute || 0, a.second || 0, a.millisecond || 0))) : c = new Date(a.year || h.getFullYear(), a.month || 0, a.day || 1, a.hour || 0, a.minute || 0, a.second || 0, a.millisecond || 0), 
        c;
    }, r;
});